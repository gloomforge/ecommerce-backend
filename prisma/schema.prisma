generator client {
  provider      = "prisma-client-js"
  output        = "./__generated__"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  role       UserRole @default(REGULAR)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  isVerified Boolean  @default(false) @map("is_verified")
  account    Account?

  @@map("users")
}

model Account {
  id       String  @id @default(uuid())
  userId   String  @unique @map("user_id")
  fullName String? @map("full_name")
  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("accounts")
}

model Token {
  id        String    @id @default(uuid())
  email     String
  token     String    @unique
  type      TokenType
  expiresIn DateTime  @map("expires_in")
  createdAt DateTime  @default(now()) @map("created_at")

  @@map("tokens")
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  imagePath String?
  products  Product[]

  @@map("categories")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  imagePath   String?
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@index([categoryId], map: "products_categoryId_fkey")
  @@map("products")
}

enum UserRole {
  REGULAR
  ADMIN
}

enum TokenType {
  VERIFICATION
  PASSWORD_RESET
}
