generator client {
  provider      = "prisma-client-js"
  output        = "./__generated__"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      UserRole @default(REGULAR)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  account   Account?
  sessions  Session?

  @@map("users")
}

model Account {
  id       Int       @id @default(autoincrement())
  userId   Int       @unique @map("user_id")
  fullName String?   @map("full_name")
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  constact Contact[]

  @@map("accounts")
}

model Contact {
  id        Int         @id @default(autoincrement())
  accountId Int         @map("account_id")
  type      ContactType @default(NONE)
  value     String
  account   Account     @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@index([accountId], map: "contacts_account_id_fkey")
  @@map("contacts")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique @map("user_id")
  token     String   @map("session_token")
  createdAt DateTime @default(now()) @map("created_at")
  expireAt  DateTime @map("expire_at")
  userAgent String?  @map("user_agent")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_sessions")
}

enum UserRole {
  REGULAR
  ADMIN
}

enum ContactType {
  NONE
  EMAIL
  PHONE
}
